{"version":3,"sources":["lib.js","Converter.js","App.js","reportWebVitals.js","index.js"],"names":["cfmToErb","text","mode","convert_cfif","convert_cfswitch","convert_cfset","reduce","m","cb","replaceAll","match","p1","expression_in_tag","trim","p2","Converter","useState","setMode","erb","setErb","cfm","setCfm","bt","t","className","value","onChange","e","target","placeholder","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e9773e.chunk.js","sourcesContent":["export default function cfmToErb(text, mode = \"erb\") {\n  return [\n    convert_cfif,\n    convert_cfswitch,\n    convert_cfset\n  ].reduce((m, cb) => {\n    return cb(m, mode);\n  }, text);\n}\n\nfunction convert_cfif(text, mode = \"erb\") {\n  if(mode === \"rb\") {\n    return text.replaceAll(/<cfif (.*?)>/g, (match, p1) => {\n      return `if ${expression_in_tag(p1)}`;\n    }).replaceAll(/<cfelseif (.*?)>/g, (match, p1) => {\n      return `elsif ${expression_in_tag(p1)}`;\n    }).replaceAll(/<cfelse>/g, \"else\")\n      .replaceAll(/<\\/cfif>/g, \"end\")\n  }\n\n  return text.replaceAll(/<cfif (.*?)>/g, (match, p1) => {\n    return `<% if ${expression_in_tag(p1)} %>`;\n  }).replaceAll(/<cfelseif (.*?)>/g, (match, p1) => {\n    return `<% elsif ${expression_in_tag(p1)} %>`;\n  }).replaceAll(/<cfelse>/g, \"<% else %>\")\n    .replaceAll(/<\\/cfif>/g, \"<% end %>\")\n}\n\nfunction expression_in_tag(text) {\n  return text.trim()\n    .replaceAll(/is equal/g, \"==\")\n    .replaceAll(/ eq /g, \" == \")\n    .replaceAll(/ is not /g, \" != \")\n    .replaceAll(/not equal/g, \"!=\")\n    .replaceAll(/ neq /g, \" != \")\n    .replaceAll(/greater than/g, \">\")\n    .replaceAll(/ gt /g, \" > \")\n    .replaceAll(/less than/g, \"<\")\n    .replaceAll(/ lt /g, \" < \")\n    .replaceAll(/greater than or equal to/g, \">=\")\n    .replaceAll(/ gte /g, \" >= \")\n    .replaceAll(/ ge /g, \" >= \")\n    .replaceAll(/less than or equal to/g, \"<=\")\n    .replaceAll(/ lte /g, \" <= \")\n    .replaceAll(/ le /g, \" <= \")\n    .replaceAll(/ is /g, \" == \")\n    .replaceAll(/ and /g, \" && \")\n    .replaceAll(/ or /g, \" || \")\n}\n\nfunction convert_cfswitch(text, mode = \"erb\") {\n  if(mode === \"rb\") {\n    return text.replaceAll(/<cfswitch expression=\"#(.*?)#\">/g, \"case $1\")\n      .replaceAll(/<cfcase value=\"(.*?)\">/g, \"when $1\")\n      .replaceAll(/<\\/cfcase>/g, \"\")\n      .replaceAll(/<cfdefaultcase>/g, \"else\")\n      .replaceAll(/<\\/cfdefaultcase>/g, \"\")\n      .replaceAll(/<\\/cfswitch>/g, \"end\")\n  }\n\n  return text.replaceAll(/<cfswitch expression=\"#(.*?)#\">/g, \"<% case $1 %>\")\n    .replaceAll(/<cfcase value=\"(.*?)\">/g, \"<% when $1 %>\")\n    .replaceAll(/<\\/cfcase>/g, \"\")\n    .replaceAll(/<cfdefaultcase>/g, \"<% else %>\")\n    .replaceAll(/<\\/cfdefaultcase>/g, \"\")\n    .replaceAll(/<\\/cfswitch>/g, \"<% end %>\")\n}\n\nfunction convert_cfset(text, mode = \"erb\") {\n  if(mode === \"rb\") {\n    return text.replaceAll(/<cfset (.*?)=(.*?)>/g, (match, p1, p2) => {\n      return `${p1.trim()} = ${expression_in_tag(p2)}`;\n    });\n  }\n\n  return text.replaceAll(/<cfset (.*?)=(.*?)>/g, (match, p1, p2) => {\n    return `<% ${p1.trim()} = ${expression_in_tag(p2)} %>`;\n  });\n}\n","import React, { useState } from 'react';\nimport cfmToErb from './lib';\n\nfunction Converter() {\n  const [mode, setMode] = useState(\"erb\");\n  const [erb, setErb] = useState(\"\");\n  const [cfm, setCfm] = useState(\"\");\n\n  const bt = (t) => t.replaceAll(\"\t\t\", \"  \");\n\n  const handleChangeTaCfm = (e) => {\n    const text = e.target.value;\n    setCfm(bt(text));\n    setErb(cfmToErb(bt(text), mode));\n  }\n\n  const handleChangeSelect = (e) => {\n    setMode(e.target.value);\n    setErb(cfmToErb(bt(cfm), e.target.value));\n  }\n\n  return (\n    <div className=\"Converter\">\n      <div className=\"select\">\n        <select value={mode} onChange={handleChangeSelect}>\n          <option value=\"erb\">Erb</option>\n          <option value=\"rb\">Rb</option>\n        </select>\n      </div>\n      <div className=\"box\">\n        <div className=\"cfm\">\n          <textarea className=\"ta_cfm\" onChange={handleChangeTaCfm} value={cfm} placeholder=\"cfm...\">\n          </textarea>\n        </div>\n        <div className=\"erb\">\n          <textarea className=\"ta_erb\" readOnly value={erb} placeholder={`${mode}...`}>\n          </textarea>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Converter;\n","import Converter from './Converter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter></Converter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}