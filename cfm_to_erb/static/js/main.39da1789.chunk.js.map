{"version":3,"sources":["lib.js","Converter.js","App.js","reportWebVitals.js","index.js"],"names":["convert_print_variable","text","replaceAll","convert_cfif","parse_expression","e","trim","match","expression","convert_cfswitch","Converter","useState","erb","setErb","cfm","setCfm","className","onChange","target","value","reduce","m","cb","cfmToErb","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAA,SAASA,EAAuBC,GAE9B,OAAOA,EAAKC,WAAW,+BAAgC,aAGzD,SAASC,EAAaF,GACpB,IAAMG,EAAmB,SAACC,GACxB,OAAOA,EAAEC,OACNJ,WAAW,aAAc,QACzBA,WAAW,YAAa,QACxBA,WAAW,YAAa,QACxBA,WAAW,gBAAiB,QAC5BA,WAAW,YAAa,QACxBA,WAAW,aAAc,QACzBA,WAAW,YAAa,OACxBA,WAAW,aAAc,QACzBA,WAAW,YAAa,OACxBA,WAAW,aAAc,SAI9B,OAAOD,EAAKC,WAAW,sBAAsB,SAACK,EAAOC,GAAR,sBAAgCJ,EAAiBI,GAAjD,UAC1CN,WAAW,qBAAqB,SAACK,EAAOC,GAAR,yBAAmCJ,EAAiBI,GAApD,WAChCN,WAAW,YAAa,cACxBA,WAAW,YAAa,aAG7B,SAASO,EAAiBR,GACxB,OAAOA,EAAKC,WAAW,mCAAoC,iBACxDA,WAAW,0BAA2B,iBACtCA,WAAW,cAAe,IAC1BA,WAAW,iBAAkB,aCJnBQ,MAxBf,WAAsB,IAAD,EACGC,mBAAS,IADZ,mBACZC,EADY,KACPC,EADO,OAEGF,mBAAS,IAFZ,mBAEZG,EAFY,KAEPC,EAFO,KAUnB,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,0BAAUA,UAAU,SAASC,SATT,SAACZ,GACzB,IAAMJ,EAAOI,EAAEa,OAAOC,MACtBJ,EAAOd,GACPY,EDwBW,SAAkBZ,GAC/B,MAAO,CACLD,EACAG,EACAM,GACAW,QAAO,SAACC,EAAGC,GAAJ,OAAWA,EAAGD,KAAIpB,GC7BlBsB,CAAStB,KAM8CkB,MAAOL,MAGnE,qBAAKE,UAAU,MAAf,SACE,0BAAUA,UAAU,SAASQ,UAAQ,EAACL,MAAOP,UCVtCa,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCOSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39da1789.chunk.js","sourcesContent":["function convert_print_variable(text) {\n  //eslint-disable-next-line\n  return text.replaceAll(/\\#XMLFormat\\((.*?)\\)\\#(?!{)/g, \"<%= $1 %>\");\n}\n\nfunction convert_cfif(text) {\n  const parse_expression = (e) => {\n    return e.trim()\n      .replaceAll(/\\s+and\\s+/g, \" && \")\n      .replaceAll(/\\s+or\\s+/g, \" || \")\n      .replaceAll(/\\s+eq\\s+/g, \" == \")\n      .replaceAll(/\\s+is not\\s+/g, \" != \")\n      .replaceAll(/\\s+is\\s+/g, \" == \")\n      .replaceAll(/\\s+neq\\s+/g, \" != \")\n      .replaceAll(/\\s+gt\\s+/g, \" > \")\n      .replaceAll(/\\s+gte\\s+/g, \" >= \")\n      .replaceAll(/\\s+lt\\s+/g, \" < \")\n      .replaceAll(/\\s+lte\\s+/g, \" <= \")\n  }\n\n\n  return text.replaceAll(/<cfif (.*?)>(?!=)/g, (match, expression) => `<% if ${parse_expression(expression)} %>`)\n    .replaceAll(/<cfelseif (.*?)>/g, (match, expression) => `<% elsif ${parse_expression(expression)} %>\"`)\n    .replaceAll(/<cfelse>/g, \"<% else %>\")\n    .replaceAll(/<\\/cfif>/g, \"<% end %>\");\n}\n\nfunction convert_cfswitch(text) {\n  return text.replaceAll(/<cfswitch expression=\"#(.*?)#\">/g, \"<% case $1 %>\")\n    .replaceAll(/<cfcase value=\"(.*?)\">/g, \"<% when $1 %>\")\n    .replaceAll(/<\\/cfcase>/g, \"\")\n    .replaceAll(/<\\/cfswitch\">/g, \"<% end %>\")\n}\n\nexport default function cfmToErb(text) {\n  return [\n    convert_print_variable,\n    convert_cfif,\n    convert_cfswitch\n  ].reduce((m, cb) => cb(m), text);\n}\n","import React, { useState } from 'react';\nimport cfmToErb from './lib';\n\nfunction Converter() {\n  const [erb, setErb] = useState(\"\");\n  const [cfm, setCfm] = useState(\"\");\n\n  const handleChangeTaCfm = (e) => {\n    const text = e.target.value;\n    setCfm(text);\n    setErb(cfmToErb(text));\n  }\n\n  return (\n    <div className=\"Converter\">\n      <div className=\"cfm\">\n        <textarea className=\"ta_cfm\" onChange={handleChangeTaCfm} value={cfm}>\n        </textarea>\n      </div>\n      <div className=\"erb\">\n        <textarea className=\"ta_erb\" readOnly value={erb}>\n        </textarea>\n      </div>\n    </div>\n  )\n}\n\nexport default Converter;\n","import Converter from './Converter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter></Converter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}